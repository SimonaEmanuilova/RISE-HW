@using ToDoTaskSolution.Entities
@model IEnumerable<Person>

<div class="text-container">
    <h1>People</h1>
    <a asp-action="Create" role="button" class="btn btn-create">Create New User</a>
</div>
<div class="table-container">
    <table class="table">
        <thead class="thead">
            <tr class="tr">
                <th class="th">
                    @Html.DisplayNameFor(model => model.Id)
                </th>

                <th class="th">
                    @Html.DisplayNameFor(model => model.Name)
                </th>

                <th class="th">
                    @Html.DisplayNameFor(model => model.Age)
                </th>
                <th class="th">Options </th>
            </tr>
        </thead>
        <tbody class="tbody">
            @foreach (var person in Model)
            {
                <tr class="tr">
                    <td class="td"> @person.Id</td>
                    <td class="td"> @person.Name</td>
                    <td class="td"> @person.Age</td>
                    <td class="td">
                        <a asp-action="Edit" asp-route-id="@person.Id" role="button" class="btn btn-light">Edit</a>
                        <a asp-action="Details" asp-route-id="@person.Id" role="button" class="btn btn-light">Details</a>
                        <a asp-action="Delete" asp-route-id="@person.Id" role="button" class="btn btn-delete" onclick="confirmDelete(event)">Delete</a>
                    </td>
                </tr>
            }

        </tbody>


    </table>
    @if (TempData["ErrorMessage"] != null)
    {
        <span class="text-danger">@TempData["ErrorMessage"]</span>
    }

</div>